{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Colors from \"../constants/colors\";\nimport { MOUNTAINS } from \"../data/dummy-data\";\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar HikeListTile = function HikeListTile(props) {\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  var titleMountain = MOUNTAINS.find(function (mountain) {\n    return mountain.id === props.hike.mountainId;\n  });\n  var dateTime = new Date(props.hike.dateTime);\n  var date = moment(dateTime).format(\"MMM Do YYYY\");\n  var time = moment(dateTime).format('LT');\n  return _jsx(View, {\n    style: styles.hikesItem,\n    children: _jsx(TouchableCmp, {\n      onPress: props.onSelect,\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: titleMountain.name\n        }), _jsx(Text, {\n          style: styles.description,\n          children: date\n        }), _jsx(Text, {\n          style: styles.description,\n          children: time\n        })]\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  hikesItem: {\n    flex: 1,\n    marginLeft: 15,\n    marginRight: 15,\n    marginTop: 7,\n    marginBottom: 7,\n    padding: 15,\n    height: 110,\n    backgroundColor: Colors.backgroundGreen,\n    borderRadius: 5,\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 30,\n    fontFamily: 'robotoSlab',\n    color: Colors.primaryDarkBlue\n  },\n  description: {\n    fontSize: 18,\n    fontFamily: 'openSans',\n    color: Colors.secondaryBlue\n  }\n});\nexport default HikeListTile;","map":{"version":3,"sources":["/Users/Hugo.Amorim/Desktop/hikingApp/hikingApp/components/HikeListTile.js"],"names":["React","Colors","MOUNTAINS","moment","HikeListTile","props","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","titleMountain","find","mountain","id","hike","mountainId","dateTime","Date","date","format","time","styles","hikesItem","onSelect","title","name","description","StyleSheet","create","flex","marginLeft","marginRight","marginTop","marginBottom","padding","height","backgroundColor","backgroundGreen","borderRadius","overflow","fontSize","fontFamily","color","primaryDarkBlue","secondaryBlue"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAGA,OAAOC,MAAP;AAEA,SAASC,SAAT;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAIA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,KAAK,EAAI;AAC1B,MAAIC,YAAY,GAAIC,gBAApB;;AAEA,MAAIC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BD,QAAQ,CAACE,OAAT,IAAoB,EAArD,EAAyD;AACvDJ,IAAAA,YAAY,GAAGK,uBAAf;AACD;;AAED,MAAMC,aAAa,GAAGV,SAAS,CAACW,IAAV,CAAe,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,EAAT,KAAgBV,KAAK,CAACW,IAAN,CAAWC,UAA/B;AAAA,GAAvB,CAAtB;AAGA,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASd,KAAK,CAACW,IAAN,CAAWE,QAApB,CAAf;AACA,MAAME,IAAI,GAAGjB,MAAM,CAACe,QAAD,CAAN,CAAiBG,MAAjB,CAAwB,aAAxB,CAAb;AACA,MAAMC,IAAI,GAAGnB,MAAM,CAACe,QAAD,CAAN,CAAiBG,MAAjB,CAAwB,IAAxB,CAAb;AAEA,SACI,KAAC,IAAD;AACA,IAAA,KAAK,EAAEE,MAAM,CAACC,SADd;AAAA,cAGI,KAAC,YAAD;AACA,MAAA,OAAO,EAAEnB,KAAK,CAACoB,QADf;AAAA,gBAGI,MAAC,IAAD;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA,oBAA4Bd,aAAa,CAACe;AAA1C,UADJ,EAEI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,WAApB;AAAA,oBAAkCR;AAAlC,UAFJ,EAGI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEG,MAAM,CAACK,WAApB;AAAA,oBAAkCN;AAAlC,UAHJ;AAAA;AAHJ;AAHJ,IADJ;AAiBH,CA/BD;;AAiCA,IAAMC,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIPC,IAAAA,SAAS,EAAC,CAJH;AAKPC,IAAAA,YAAY,EAAE,CALP;AAMPC,IAAAA,OAAO,EAAE,EANF;AAOPC,IAAAA,MAAM,EAAE,GAPD;AAQPC,IAAAA,eAAe,EAAErC,MAAM,CAACsC,eARjB;AASPC,IAAAA,YAAY,EAAE,CATP;AAUPC,IAAAA,QAAQ,EAAE;AAVH,GADkB;AAa7Bf,EAAAA,KAAK,EAAE;AACHgB,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,UAAU,EAAE,YAFT;AAGHC,IAAAA,KAAK,EAAE3C,MAAM,CAAC4C;AAHX,GAbsB;AAkB7BjB,EAAAA,WAAW,EAAG;AACVc,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE,UAFF;AAGVC,IAAAA,KAAK,EAAE3C,MAAM,CAAC6C;AAHJ;AAlBe,CAAlB,CAAf;AA0BA,eAAe1C,YAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, View, StyleSheet, Text, Platform, TouchableNativeFeedback} from 'react-native'\n\nimport Colors from '../constants/colors' \n\nimport { MOUNTAINS } from '../data/dummy-data'\nimport moment from 'moment';\n\n\n\nconst HikeListTile = props => {\n    let TouchableCmp =  TouchableOpacity;\n  \n    if (Platform.OS === 'android' && Platform.Version >= 21 ){\n      TouchableCmp = TouchableNativeFeedback;\n    }\n\n    const titleMountain = MOUNTAINS.find(mountain => mountain.id === props.hike.mountainId)\n\n\n    var dateTime = new Date(props.hike.dateTime);\n    const date = moment(dateTime).format(\"MMM Do YYYY\");\n    const time = moment(dateTime).format('LT');\n\n    return(\n        <View \n        style={styles.hikesItem}        \n        >\n            <TouchableCmp\n            onPress={props.onSelect}\n            >\n                <View>\n                    <Text style={styles.title}>{titleMountain.name}</Text>\n                    <Text style={styles.description}>{date}</Text>\n                    <Text style={styles.description}>{time}</Text>\n           </View>\n            </TouchableCmp>\n        </View>\n\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    hikesItem: {\n        flex: 1,\n        marginLeft: 15,\n        marginRight: 15,\n        marginTop:7,\n        marginBottom: 7,\n        padding: 15,\n        height: 110,\n        backgroundColor: Colors.backgroundGreen,\n        borderRadius: 5,\n        overflow: 'hidden'\n    },\n    title: {\n        fontSize: 30,\n        fontFamily: 'robotoSlab',\n        color: Colors.primaryDarkBlue\n    },\n    description : {\n        fontSize: 18,\n        fontFamily: 'openSans',\n        color: Colors.secondaryBlue\n        \n    }\n})\n\nexport default HikeListTile"]},"metadata":{},"sourceType":"module"}