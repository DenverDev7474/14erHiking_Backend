{"ast":null,"code":"import React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Colors from \"../constants/colors\";\nimport { MOUNTAINS } from \"../data/dummy-data\";\nimport moment from 'moment';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CalendarListTile = function CalendarListTile(props) {\n  var userId = 0;\n  var TouchableCmp = TouchableOpacity;\n\n  if (Platform.OS === 'android' && Platform.Version >= 21) {\n    TouchableCmp = TouchableNativeFeedback;\n  }\n\n  console.log('props:', props.hike.mountainId);\n  var titleMountain = MOUNTAINS.find(function (mountain) {\n    return mountain.id === props.hike.mountainId;\n  });\n  ;\n  var dateTime = new Date(props.hike.dateTime);\n  var date = moment(dateTime).format(\"MMM Do YYYY\");\n  var time = moment(dateTime).format('LT');\n\n  var stylebackground = function stylebackground() {\n    if (userId === props.hike.host) {\n      return {\n        backgroundColor: Colors.backgroundGreen\n      };\n    } else {\n      return {\n        backgroundColor: Colors.backgroundBlue\n      };\n    }\n  };\n\n  return _jsx(View, {\n    style: [styles.hikesItem, stylebackground()],\n    children: _jsx(TouchableCmp, {\n      onPress: props.onSelect,\n      children: _jsxs(View, {\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: titleMountain.name\n        }), _jsxs(Text, {\n          style: styles.description,\n          children: [date, \" - \", time]\n        })]\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  hikesItem: {\n    flex: 1,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 8,\n    marginBottom: 8,\n    padding: 10,\n    height: 80,\n    borderRadius: 5,\n    overflow: 'hidden'\n  },\n  title: {\n    fontSize: 30,\n    fontFamily: 'robotoSlab',\n    color: Colors.primaryDarkBlue\n  },\n  description: {\n    fontSize: 18,\n    fontFamily: 'openSans',\n    color: Colors.secondaryBlue\n  }\n});\nexport default CalendarListTile;","map":{"version":3,"sources":["/Users/Hugo.Amorim/Desktop/hikingApp/hikingApp/components/CalendarListTile.js"],"names":["React","Colors","MOUNTAINS","moment","CalendarListTile","props","userId","TouchableCmp","TouchableOpacity","Platform","OS","Version","TouchableNativeFeedback","console","log","hike","mountainId","titleMountain","find","mountain","id","dateTime","Date","date","format","time","stylebackground","host","backgroundColor","backgroundGreen","backgroundBlue","styles","hikesItem","onSelect","title","name","description","StyleSheet","create","flex","marginLeft","marginRight","marginTop","marginBottom","padding","height","borderRadius","overflow","fontSize","fontFamily","color","primaryDarkBlue","secondaryBlue"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAGA,OAAOC,MAAP;AAEA,SAASC,SAAT;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAC9B,MAAMC,MAAM,GAAG,CAAf;AAEA,MAAIC,YAAY,GAAIC,gBAApB;;AAEA,MAAIC,QAAQ,CAACC,EAAT,KAAgB,SAAhB,IAA6BD,QAAQ,CAACE,OAAT,IAAoB,EAArD,EAAyD;AACvDJ,IAAAA,YAAY,GAAGK,uBAAf;AACD;;AAEDC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBT,KAAK,CAACU,IAAN,CAAWC,UAAhC;AAEA,MAAMC,aAAa,GAAGf,SAAS,CAACgB,IAAV,CAAe,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAACC,EAAT,KAAgBf,KAAK,CAACU,IAAN,CAAWC,UAA/B;AAAA,GAAvB,CAAtB;AAAwF;AAGxF,MAAIK,QAAQ,GAAG,IAAIC,IAAJ,CAASjB,KAAK,CAACU,IAAN,CAAWM,QAApB,CAAf;AACA,MAAME,IAAI,GAAGpB,MAAM,CAACkB,QAAD,CAAN,CAAiBG,MAAjB,CAAwB,aAAxB,CAAb;AACA,MAAMC,IAAI,GAAGtB,MAAM,CAACkB,QAAD,CAAN,CAAiBG,MAAjB,CAAwB,IAAxB,CAAb;;AAEA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC1B,QAAIpB,MAAM,KAAKD,KAAK,CAACU,IAAN,CAAWY,IAA1B,EAAgC;AAC5B,aACQ;AAACC,QAAAA,eAAe,EAAE3B,MAAM,CAAC4B;AAAzB,OADR;AAGH,KAJD,MAIO;AACH,aACI;AAACD,QAAAA,eAAe,EAAE3B,MAAM,CAAC6B;AAAzB,OADJ;AAGH;AACJ,GAVD;;AAYA,SACI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACC,MAAM,CAACC,SAAR,EAAmBN,eAAe,EAAlC,CAAb;AAAA,cACI,KAAC,YAAD;AACA,MAAA,OAAO,EAAErB,KAAK,CAAC4B,QADf;AAAA,gBAGI,MAAC,IAAD;AAAA,mBACI,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEF,MAAM,CAACG,KAApB;AAAA,oBAA4BjB,aAAa,CAACkB;AAA1C,UADJ,EAEI,MAAC,IAAD;AAAM,UAAA,KAAK,EAAEJ,MAAM,CAACK,WAApB;AAAA,qBAAkCb,IAAlC,SAA2CE,IAA3C;AAAA,UAFJ;AAAA;AAHJ;AADJ,IADJ;AAYH,CA1CD;;AA4CA,IAAMM,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,SAAS,EAAE;AACPO,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,WAAW,EAAE,EAHN;AAIPC,IAAAA,SAAS,EAAC,CAJH;AAKPC,IAAAA,YAAY,EAAE,CALP;AAMPC,IAAAA,OAAO,EAAE,EANF;AAOPC,IAAAA,MAAM,EAAE,EAPD;AAQPC,IAAAA,YAAY,EAAE,CARP;AASPC,IAAAA,QAAQ,EAAE;AATH,GADkB;AAY7Bb,EAAAA,KAAK,EAAE;AACHc,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,UAAU,EAAE,YAFT;AAGHC,IAAAA,KAAK,EAAEjD,MAAM,CAACkD;AAHX,GAZsB;AAiB7Bf,EAAAA,WAAW,EAAG;AACVY,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,UAAU,EAAE,UAFF;AAGVC,IAAAA,KAAK,EAAEjD,MAAM,CAACmD;AAHJ;AAjBe,CAAlB,CAAf;AAyBA,eAAehD,gBAAf","sourcesContent":["import React from 'react';\nimport { TouchableOpacity, View, StyleSheet, Text, Platform, TouchableNativeFeedback} from 'react-native'\n\nimport Colors from '../constants/colors' \n\nimport { MOUNTAINS } from '../data/dummy-data'\nimport moment from 'moment';\n\n\n\nconst CalendarListTile = props => {\n    const userId = 0;\n\n    let TouchableCmp =  TouchableOpacity;\n  \n    if (Platform.OS === 'android' && Platform.Version >= 21 ){\n      TouchableCmp = TouchableNativeFeedback;\n    }\n\n    console.log('props:',props.hike.mountainId)\n\n    const titleMountain = MOUNTAINS.find(mountain => mountain.id === props.hike.mountainId);;\n\n\n    var dateTime = new Date(props.hike.dateTime);\n    const date = moment(dateTime).format(\"MMM Do YYYY\");\n    const time = moment(dateTime).format('LT');\n\n    const stylebackground = () => {\n        if (userId === props.hike.host) {\n            return ( \n                    {backgroundColor: Colors.backgroundGreen}\n            )\n        } else {\n            return (\n                {backgroundColor: Colors.backgroundBlue}\n            )\n        }\n    }\n    \n    return(\n        <View style={[styles.hikesItem, stylebackground()]} >    \n            <TouchableCmp\n            onPress={props.onSelect}\n            >\n                <View>\n                    <Text style={styles.title}>{titleMountain.name}</Text>\n                    <Text style={styles.description}>{date} - {time}</Text>\n                </View>\n            </TouchableCmp>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    hikesItem: {\n        flex: 1,\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop:8,\n        marginBottom: 8,\n        padding: 10,\n        height: 80,\n        borderRadius: 5,\n        overflow: 'hidden',\n    },\n    title: {\n        fontSize: 30,\n        fontFamily: 'robotoSlab',\n        color: Colors.primaryDarkBlue\n    },\n    description : {\n        fontSize: 18,\n        fontFamily: 'openSans',\n        color: Colors.secondaryBlue\n        \n    }\n})\n\nexport default CalendarListTile"]},"metadata":{},"sourceType":"module"}