{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ListCard from \"../../components/ListCard\";\nimport { useAppSelector } from \"../../common/hooks/hooks\";\nimport rangesDict from \"../../data/StaticData/rangesData\";\nimport Colors from \"../../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar InfoScreen = function InfoScreen(_ref) {\n  var navigation = _ref.navigation;\n  var ranges = Object.keys(rangesDict).map(function (key) {\n    return {\n      rangeName: key,\n      randgeId: rangesDict[key]\n    };\n  });\n\n  var renderItem = function renderItem(itemData) {\n    return _jsx(ListCard, {\n      range: itemData.item.rangeName,\n      width: '45%',\n      color: '#CCE1EF',\n      onSelect: function onSelect(props) {\n        navigation.navigate(\"InfoDetailScreen\", {\n          rangeId: itemData.item.randgeId,\n          rangeName: itemData.item.rangeName\n        });\n      },\n      children: _jsx(Text, {\n        style: styles.title,\n        children: itemData.item.rangeName\n      })\n    });\n  };\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      style: styles.rangeTitle,\n      children: \"Ranges\"\n    }), _jsx(View, {\n      style: styles.rangeContainer,\n      children: _jsx(FlatList, {\n        data: ranges,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.rangeName;\n        },\n        numColumns: 2,\n        scrollEnabled: false\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  Screen: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  rangeTitle: {\n    color: Colors.secondaryGreen,\n    fontFamily: 'robotoSlab',\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginVertical: 10,\n    marginLeft: 15\n  },\n  rangesCol: {\n    maxWidth: '50%'\n  },\n  title: {\n    fontSize: 18,\n    lineHeight: 20,\n    fontFamily: 'robotoSlab',\n    color: Colors.primaryDarkBlue\n  },\n  rangeContainer: {\n    marginHorizontal: 15\n  }\n});\nexport default InfoScreen;","map":{"version":3,"sources":["/Users/Hugo.Amorim/Desktop/hikingApp/hikingApp/frontend/screens/Info/InfoScreen.js"],"names":["React","ListCard","useAppSelector","rangesDict","Colors","InfoScreen","navigation","ranges","Object","keys","map","key","rangeName","randgeId","renderItem","itemData","item","props","navigate","rangeId","styles","title","screen","rangeTitle","rangeContainer","StyleSheet","create","Screen","justifyContent","alignItems","color","secondaryGreen","fontFamily","fontSize","fontWeight","marginVertical","marginLeft","rangesCol","maxWidth","lineHeight","primaryDarkBlue","marginHorizontal"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,OAAOC,QAAP;AACA,SAASC,cAAT;AACA,OAAOC,UAAP;AACA,OAAOC,MAAP;;;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;AAGjC,MAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYN,UAAZ,EAAwBO,GAAxB,CAA4B,UAACC,GAAD,EAAS;AAChD,WAAO;AACHC,MAAAA,SAAS,EAAED,GADR;AAEHE,MAAAA,QAAQ,EAAEV,UAAU,CAACQ,GAAD;AAFjB,KAAP;AAIH,GALc,CAAf;;AAQA,MAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAAc;AAC7B,WACI,KAAC,QAAD;AAAU,MAAA,KAAK,EAAEA,QAAQ,CAACC,IAAT,CAAcJ,SAA/B;AAA0C,MAAA,KAAK,EAAE,KAAjD;AAAwD,MAAA,KAAK,EAAE,SAA/D;AAA0E,MAAA,QAAQ,EAAE,kBAACK,KAAD,EAAW;AAC3FX,QAAAA,UAAU,CAACY,QAAX,CAAoB,kBAApB,EAAwC;AACpCC,UAAAA,OAAO,EAAEJ,QAAQ,CAACC,IAAT,CAAcH,QADa;AAEpCD,UAAAA,SAAS,EAAEG,QAAQ,CAACC,IAAT,CAAcJ;AAFW,SAAxC;AAIH,OALD;AAAA,gBAMI,KAAC,IAAD;AAAO,QAAA,KAAK,EAAEQ,MAAM,CAACC,KAArB;AAAA,kBAA6BN,QAAQ,CAACC,IAAT,CAAcJ;AAA3C;AANJ,MADJ;AAUH,GAXD;;AAaA,SACY,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACE,MAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACG,UAApB;AAAA;AAAA,MADJ,EAEI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACI,cAApB;AAAA,gBACI,KAAC,QAAD;AACI,QAAA,IAAI,EAAGjB,MADX;AAEI,QAAA,UAAU,EAAEO,UAFhB;AAGI,QAAA,YAAY,EAAE,sBAAAE,IAAI;AAAA,iBAAIA,IAAI,CAACJ,SAAT;AAAA,SAHtB;AAII,QAAA,UAAU,EAAE,CAJhB;AAKI,QAAA,aAAa,EAAE;AALnB;AADJ,MAFJ;AAAA,IADZ;AAeH,CAvCD;;AAyCA,IAAMQ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,cAAc,EAAE,QADZ;AAEJC,IAAAA,UAAU,EAAE;AAFR,GADqB;AAK7BN,EAAAA,UAAU,EAAE;AACRO,IAAAA,KAAK,EAAE1B,MAAM,CAAC2B,cADN;AAERC,IAAAA,UAAU,EAAE,YAFJ;AAGRC,IAAAA,QAAQ,EAAE,EAHF;AAIRC,IAAAA,UAAU,EAAE,MAJJ;AAKRC,IAAAA,cAAc,EAAE,EALR;AAMRC,IAAAA,UAAU,EAAE;AANJ,GALiB;AAa7BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,QAAQ,EAAE;AADH,GAbkB;AAgB7BjB,EAAAA,KAAK,EAAE;AACHY,IAAAA,QAAQ,EAAE,EADP;AAEHM,IAAAA,UAAU,EAAE,EAFT;AAGHP,IAAAA,UAAU,EAAE,YAHT;AAIHF,IAAAA,KAAK,EAAE1B,MAAM,CAACoC;AAJX,GAhBsB;AAsB7BhB,EAAAA,cAAc,EAAE;AACZiB,IAAAA,gBAAgB,EAAE;AADN;AAtBa,CAAlB,CAAf;AA2BA,eAAgBpC,UAAhB","sourcesContent":["import React from 'react';\nimport { View, StyleSheet, FlatList, Text, SafeAreaView, ScrollView} from 'react-native'\nimport ListCard from '../../components/ListCard'\nimport { useAppSelector } from '../../common/hooks/hooks'\nimport rangesDict from '../../data/StaticData/rangesData';\nimport Colors from '../../constants/colors';\n\n\n\nconst InfoScreen = ({navigation}) => {\n\n    // map through rangesDict and create a new array of all keys and values\n    const ranges = Object.keys(rangesDict).map((key) => {\n        return {\n            rangeName: key,\n            randgeId: rangesDict[key]\n        }   \n    }\n    )\n\n    const renderItem = (itemData) => {\n        return (\n            <ListCard range={itemData.item.rangeName} width={'45%'} color={'#CCE1EF'} onSelect={(props) => {\n                navigation.navigate(\"InfoDetailScreen\", {\n                    rangeId: itemData.item.randgeId,\n                    rangeName: itemData.item.rangeName\n                })\n            }}>\n                <Text  style={styles.title}>{itemData.item.rangeName}</Text>\n            </ListCard>\n        );\n    }\n\n    return (\n                <View style={styles.screen}>\n                    <Text style={styles.rangeTitle}>Ranges</Text>\n                    <View style={styles.rangeContainer}>  \n                        <FlatList \n                            data= {ranges}\n                            renderItem={renderItem}\n                            keyExtractor={item => item.rangeName}\n                            numColumns={2}\n                            scrollEnabled={false}\n\n                        />\n                    </View>\n                </View>   \n    );\n};\n\nconst styles = StyleSheet.create({\n    Screen: {\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    rangeTitle: {\n        color: Colors.secondaryGreen,\n        fontFamily: 'robotoSlab',\n        fontSize: 20,\n        fontWeight: 'bold',\n        marginVertical: 10, \n        marginLeft: 15,\n    },\n    rangesCol: {    \n        maxWidth: '50%' \n    },\n    title: {\n        fontSize: 18,\n        lineHeight: 20,\n        fontFamily: 'robotoSlab',\n        color: Colors.primaryDarkBlue\n    },\n    rangeContainer: {   \n        marginHorizontal: 15\n    }\n});\n\nexport default  InfoScreen;"]},"metadata":{},"sourceType":"module"}