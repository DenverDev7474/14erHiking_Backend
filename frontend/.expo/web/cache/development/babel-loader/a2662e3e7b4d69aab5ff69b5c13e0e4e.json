{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport var routeApi = createApi({\n  reducerPath: 'routeApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3000/api/v1/'\n  }),\n  endpoints: function endpoints(builder) {\n    return {\n      getRouteById: builder.query({\n        query: function query(id) {\n          return {\n            url: \"routes/\" + id,\n            method: 'GET'\n          };\n        },\n        provides: function provides(result) {\n          return result.route;\n        }\n      }),\n      getAllRoutesByMountainId: builder.query({\n        query: function query(id) {\n          return {\n            url: \"routes/mountain/\" + id,\n            method: 'GET'\n          };\n        },\n        provides: function provides(result) {\n          return result.routes;\n        }\n      }),\n      getAllRoutes: builder.query({\n        query: function query() {\n          return {\n            url: 'routes',\n            method: 'GET'\n          };\n        },\n        provides: function provides(result) {\n          return result.routes;\n        }\n      })\n    };\n  }\n});\nvar useGetRouteByIdQuery = routeApi.useGetRouteByIdQuery,\n    useGetAllRoutesByMountainIdQuery = routeApi.useGetAllRoutesByMountainIdQuery,\n    useGetAllRoutesQuery = routeApi.useGetAllRoutesQuery;\nexport { useGetRouteByIdQuery, useGetAllRoutesByMountainIdQuery, useGetAllRoutesQuery };","map":{"version":3,"sources":["/Users/Hugo.Amorim/Desktop/hikingApp/hikingApp/frontend/common/services/routes.service.js"],"names":["createApi","fetchBaseQuery","routeApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getRouteById","query","id","url","method","provides","result","route","getAllRoutesByMountainId","routes","getAllRoutes","useGetRouteByIdQuery","useGetAllRoutesByMountainIdQuery","useGetAllRoutesQuery"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAEA,OAAO,IAAMC,QAAQ,GAAGF,SAAS,CAAC;AAC9BG,EAAAA,WAAW,EAAE,UADiB;AAE9BC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFK;AAG9BC,EAAAA,SAAS,EAAE,mBAACC,OAAD;AAAA,WAAc;AACrBC,MAAAA,YAAY,EAAED,OAAO,CAACE,KAAR,CAAc;AACxBA,QAAAA,KAAK,EAAE,eAACC,EAAD;AAAA,iBAAS;AACZC,YAAAA,GAAG,cAAYD,EADH;AAEZE,YAAAA,MAAM,EAAE;AAFI,WAAT;AAAA,SADiB;AAKxBC,QAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,iBAAYA,MAAM,CAACC,KAAnB;AAAA;AALc,OAAd,CADO;AAQrBC,MAAAA,wBAAwB,EAAET,OAAO,CAACE,KAAR,CAAc;AACpCA,QAAAA,KAAK,EAAE,eAACC,EAAD;AAAA,iBAAS;AACZC,YAAAA,GAAG,uBAAqBD,EADZ;AAEZE,YAAAA,MAAM,EAAE;AAFI,WAAT;AAAA,SAD6B;AAKpCC,QAAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AAClB,iBAAOA,MAAM,CAACG,MAAd;AACH;AAPmC,OAAd,CARL;AAiBrBC,MAAAA,YAAY,EAAEX,OAAO,CAACE,KAAR,CAAc;AACxBA,QAAAA,KAAK,EAAE;AAAA,iBAAO;AACVE,YAAAA,GAAG,EAAE,QADK;AAEVC,YAAAA,MAAM,EAAE;AAFE,WAAP;AAAA,SADiB;AAKxBC,QAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,iBAAYA,MAAM,CAACG,MAAnB;AAAA;AALc,OAAd;AAjBO,KAAd;AAAA;AAHmB,CAAD,CAA1B;AA8BA,IAAOE,oBAAP,GAAuFjB,QAAvF,CAAOiB,oBAAP;AAAA,IAA6BC,gCAA7B,GAAuFlB,QAAvF,CAA6BkB,gCAA7B;AAAA,IAA+DC,oBAA/D,GAAuFnB,QAAvF,CAA+DmB,oBAA/D","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\nexport const routeApi = createApi({\n    reducerPath: 'routeApi',\n    baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:3000/api/v1/' }),\n    endpoints: (builder) => ({\n        getRouteById: builder.query({\n            query: (id) => ({\n                url: `routes/${id}`,\n                method: 'GET'\n            }),\n            provides: (result) => result.route,\n        }),\n        getAllRoutesByMountainId: builder.query({\n            query: (id) => ({\n                url: `routes/mountain/${id}`,\n                method: 'GET'\n            }),\n            provides: (result) => {\n                return result.routes\n            }\n        }),\n        getAllRoutes: builder.query({\n            query: () => ({\n                url: 'routes',\n                method: 'GET'\n            }),\n            provides: (result) => result.routes,\n        }),\n    })  \n})\n\nexport const {useGetRouteByIdQuery, useGetAllRoutesByMountainIdQuery, useGetAllRoutesQuery} = routeApi;"]},"metadata":{},"sourceType":"module"}