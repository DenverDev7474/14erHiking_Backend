{"ast":null,"code":"import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport HikeListScreen from \"../screens/Hike/HikeListScreen\";\nimport DetailHikeScreen from \"../screens/Hike/DetailHikeScreen\";\nimport Colors from \"../constants/colors\";\nimport HikeListTile from \"../components/HikeListTile\";\nimport AddNewHikeModal from \"../components/AddNewHikeModal\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function HikeNavigator(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: \"Hikelist\",\n    children: [_jsx(Stack.Group, {\n      children: _jsx(Stack.Screen, {\n        name: \"HikeListScreen\",\n        component: HikeListScreen,\n        options: {\n          header: function header(props) {\n            return _jsxs(View, {\n              style: {\n                height: 130,\n                backgroundColor: '#CCE1EF'\n              },\n              children: [_jsx(Text, {\n                style: styles.headerTitle,\n                children: \"Find a Hike\"\n              }), _jsx(View, {\n                style: styles.buttonContainerLarge,\n                children: _jsx(TouchableOpacity, {\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    onPress: function onPress() {\n                      return navigation.navigate(\"AddNewHike\");\n                    },\n                    children: \"Plan A Hike\"\n                  })\n                })\n              })]\n            });\n          }\n        }\n      })\n    }), _jsx(Stack.Group, {\n      children: _jsx(Stack.Screen, {\n        name: \"AddNewHike\",\n        component: AddNewHikeModal,\n        options: {\n          header: function header() {\n            return _jsx(View, {\n              style: {\n                height: 130,\n                backgroundColor: '#CCE1EF'\n              },\n              children: _jsx(Text, {\n                style: styles.headerTitle,\n                children: \"Add New Hike\"\n              })\n            });\n          }\n        }\n      })\n    }), _jsx(Stack.Group, {\n      children: _jsx(Stack.Screen, {\n        name: \"DetailHike\",\n        component: DetailHikeScreen,\n        options: {\n          header: function header(props) {\n            return _jsx(View, {\n              style: {\n                height: 130,\n                backgroundColor: '#CCE1EF',\n                display: 'flex'\n              },\n              children: _jsx(View, {\n                style: styles.buttonContainerSmall,\n                children: _jsx(TouchableOpacity, {\n                  children: _jsx(Text, {\n                    style: styles.buttonText,\n                    onPress: function onPress() {\n                      return navigation.goBack();\n                    },\n                    children: \"Back\"\n                  })\n                })\n              })\n            });\n          }\n        }\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  headerTitle: {\n    fontSize: 40,\n    marginLeft: 17,\n    fontFamily: 'robotoSlab',\n    bottom: 0,\n    color: Colors.primaryDarkBlue,\n    top: 70\n  },\n  buttonContainerSmall: {\n    padding: 10,\n    backgroundColor: Colors.primaryDarkBlue,\n    borderRadius: 5,\n    width: 60,\n    top: 80,\n    position: 'absolute',\n    right: 17,\n    bottom: 10\n  },\n  buttonContainerLarge: {\n    padding: 10,\n    backgroundColor: Colors.primaryDarkBlue,\n    borderRadius: 5,\n    width: 100,\n    top: 80,\n    position: 'absolute',\n    right: 17,\n    bottom: 10\n  },\n  buttonText: {\n    color: 'white',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/Hugo.Amorim/Desktop/hikingApp/hikingApp/frontend/navigator/HikeNavigator.js"],"names":["React","createStackNavigator","HikeListScreen","DetailHikeScreen","Colors","HikeListTile","AddNewHikeModal","Stack","HikeNavigator","navigation","header","props","height","backgroundColor","styles","headerTitle","buttonContainerLarge","buttonText","navigate","display","buttonContainerSmall","goBack","StyleSheet","create","fontSize","marginLeft","fontFamily","bottom","color","primaryDarkBlue","top","padding","borderRadius","width","position","right","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StyleSheet, View, Text, TouchableOpacity } from 'react-native'\n\nimport HikeListScreen from '../screens/Hike/HikeListScreen';\nimport DetailHikeScreen from '../screens/Hike/DetailHikeScreen';\nimport Colors from '../constants/colors'\nimport HikeListTile from '../components/HikeListTile';\nimport AddNewHikeModal from '../components/AddNewHikeModal';\n\nconst Stack = createStackNavigator();\n\nexport default function HikeNavigator({navigation}) {\n    // const [ modalVisible, setModalVisible ] = useState(false);\n\n    // const openModal = () => {\n    //     setModalVisible(!modalVisible);\n    // }\n\n    return (\n\n        <Stack.Navigator \n            initialRouteName=\"Hikelist\" \n        >    \n            <Stack.Group>\n                <Stack.Screen \n                    name=\"HikeListScreen\" \n                    component={HikeListScreen}\n                    options={{\n                        header: (props) =>\n                            (\n                            <View style={{ height: 130, backgroundColor: '#CCE1EF' }}>\n                                <Text style={styles.headerTitle}>Find a Hike</Text>\n                                    <View style={styles.buttonContainerLarge}>  \n                                        <TouchableOpacity>\n                                            <Text \n                                                style={styles.buttonText} \n                                                onPress={() => navigation.navigate(\"AddNewHike\") }    \n                                            >\n                                            Plan A Hike\n                                            </Text>\n                                    </TouchableOpacity>\n                                    </View>\n                            </View>\n                            ),\n                    }} \n                />\n            </Stack.Group>\n            <Stack.Group>\n                <Stack.Screen\n                    name=\"AddNewHike\"\n                    component={AddNewHikeModal}\n                    options={{\n                            header: () =>\n                                (\n                                <View style={{ height: 130, backgroundColor: '#CCE1EF' }}>\n                                    <Text style={styles.headerTitle}>Add New Hike</Text>\n                                        {/* <View style={styles.buttonContainerLarge}>  \n                                            <TouchableOpacity>\n                                                <Text \n                                                    style={styles.buttonText} \n                                                    onPress={() => openModal()}     \n                                                >\n                                                Plan A Hike\n                                                </Text>\n                                        </TouchableOpacity>\n                                        </View> */}\n                                </View>\n                                ),\n                        }}\n                />  \n            \n            </Stack.Group>\n            <Stack.Group>\n                <Stack.Screen \n                    name=\"DetailHike\" \n                    component={DetailHikeScreen} \n                    options={{\n                        header: (props) =>\n                            (\n                            <View style={{ height: 130, backgroundColor: '#CCE1EF', display:'flex'}}>\n                                <View style={styles.buttonContainerSmall}>  \n                                    <TouchableOpacity>\n                                        <Text \n                                            style={styles.buttonText} \n                                            onPress={() => navigation.goBack()}    \n                                        >\n                                        Back\n                                        </Text>\n                                </TouchableOpacity>\n                                </View>\n                            </View>\n                            ),\n                        }} \n                />\n            </Stack.Group>\n        </Stack.Navigator>\n\n    )\n}\n\nconst styles = StyleSheet.create({\n    headerTitle: {\n        fontSize: 40,\n        marginLeft: 17,\n        fontFamily: 'robotoSlab',\n        bottom: 0,\n        color: Colors.primaryDarkBlue,\n        top: 70\n    },\n    buttonContainerSmall: {\n        padding:10,\n        backgroundColor: Colors.primaryDarkBlue,\n        borderRadius: 5,\n        width: 60,\n        top: 80,\n        position: 'absolute',\n        right: 17,\n        bottom: 10\n    },\n    buttonContainerLarge: {\n        padding:10,\n        backgroundColor: Colors.primaryDarkBlue,\n        borderRadius: 5,\n        width: 100,\n        top: 80,\n        position: 'absolute',\n        right: 17,\n        bottom: 10\n    },\n    buttonText: {\n        color: 'white',\n        textAlign: 'center'\n    },\n});"]},"metadata":{},"sourceType":"module"}