{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SegmentedControlIOSComponent } from \"react-native-web/dist/index\";\nimport { FlatList } from 'react-native-gesture-handler';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Colors from \"../../constants/colors\";\nimport { useAppSelector } from \"../../common/hooks/hooks\";\nimport CalendarListTile from \"../../components/CalendarListTile\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CalendarScreen = function CalendarScreen(_ref) {\n  var navigation = _ref.navigation;\n  var userId = 0;\n  var availableHikes = useAppSelector(function (state) {\n    return state.hikeState.hikesAvailable;\n  });\n  var mountains = useAppSelector(function (state) {\n    return state.mountainState.hikesAvailable;\n  });\n  var filteredHikesLeader = availableHikes.filter(function (item) {\n    if (item.hostId === userId) {\n      return item;\n    }\n  });\n  var filteredHikesJoining = availableHikes.filter(function (item) {\n    if (item.hostId !== userId) {\n      return item;\n    }\n  });\n  var calendarData = [{\n    title: 'Hikes you are leading',\n    data: filteredHikesLeader\n  }, {\n    title: 'Hikes you joined',\n    data: filteredHikesJoining\n  }];\n  return _jsx(SafeAreaView, {\n    style: styles.container,\n    children: _jsx(SectionList, {\n      sections: calendarData,\n      keyExtractor: function keyExtractor(item, index) {\n        return item + index;\n      },\n      renderItem: function renderItem(item) {\n        return _jsx(CalendarListTile, {\n          hike: item,\n          navigation: navigation,\n          onSelect: function onSelect(props) {\n            navigation.navigate(\"CalendarDetail\", {\n              hikeId: item.item.id\n            });\n          }\n        });\n      },\n      renderSectionHeader: function renderSectionHeader(_ref2) {\n        var title = _ref2.section.title;\n        return _jsx(Text, {\n          style: styles.headerTitle,\n          children: title\n        });\n      },\n      stickySectionHeadersEnabled: false\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight\n  },\n  Screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  headerTitle: {\n    fontSize: 18,\n    marginLeft: 10,\n    fontFamily: 'robotoSlabLight',\n    bottom: 0,\n    color: Colors.primaryDarkBlue\n  }\n});\nexport default CalendarScreen;","map":{"version":3,"sources":["/Users/Hugo.Amorim/Desktop/hikingApp/hikingApp/frontend/screens/Calendar/CalendarScreen.js"],"names":["React","SegmentedControlIOSComponent","FlatList","Colors","useAppSelector","CalendarListTile","CalendarScreen","navigation","userId","availableHikes","state","hikeState","hikesAvailable","mountains","mountainState","filteredHikesLeader","filter","item","hostId","filteredHikesJoining","calendarData","title","data","styles","container","index","props","navigate","hikeId","id","section","headerTitle","StyleSheet","create","flex","paddingTop","StatusBar","currentHeight","Screen","justifyContent","alignItems","fontSize","marginLeft","fontFamily","bottom","color","primaryDarkBlue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, StatusBar, SafeAreaView, ScrollView, SegmentedControlIOSComponent } from 'react-native'\nimport { FlatList } from 'react-native-gesture-handler';\nimport { SectionList } from 'react-native';\nimport Colors from '../../constants/colors'\nimport { useAppSelector } from '../../common/hooks/hooks'\nimport  CalendarListTile from '../../components/CalendarListTile'\n    \nconst CalendarScreen = ({navigation}) => {\n\n    const userId = 0;\n    const availableHikes = useAppSelector((state) => state.hikeState.hikesAvailable)\n    const mountains = useAppSelector((state) => state.mountainState.hikesAvailable)\n\n    \n    // filter out hikes from availableHikes that hostId is equal to userId\n    const filteredHikesLeader = availableHikes.filter((item) => {\n        if(item.hostId === userId){\n            return item\n        }\n    });\n\n    const filteredHikesJoining = availableHikes.filter((item) => {\n        if(item.hostId !== userId){\n            return item\n        }\n    });\n\n\n    const calendarData = [   \n        {\n            title: 'Hikes you are leading',\n            data: filteredHikesLeader\n        },\n        {\n            title: 'Hikes you joined',\n            data: filteredHikesJoining\n        }\n    ]\n    \n        return (\n            <SafeAreaView style={styles.container}>\n                <SectionList\n                sections={calendarData}\n                keyExtractor={(item, index) =>  item + index}\n                renderItem={(item) => <CalendarListTile hike={item} navigation={navigation} onSelect={(props) => {\n                    navigation.navigate(\"CalendarDetail\", {\n                        hikeId: item.item.id,\n                    })\n                }}/>}\n                renderSectionHeader={({ section: { title } }) => (\n                    <Text style={styles.headerTitle}>{title}</Text>\n                )}\n                stickySectionHeadersEnabled={false}\n                />\n          </SafeAreaView>\n        );\n\n    };\n    \n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n            paddingTop: StatusBar.currentHeight,\n        },\n        Screen: {\n            flex: 1, \n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        headerTitle: {\n            fontSize: 18,\n            marginLeft: 10,\n            fontFamily: 'robotoSlabLight',\n            bottom: 0,\n            color: Colors.primaryDarkBlue\n        }\n    });\n\nexport default  CalendarScreen;"]},"metadata":{},"sourceType":"module"}