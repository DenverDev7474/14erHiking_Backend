{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport var mountainApi = createApi({\n  reducerPath: 'mountainApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3000/api/v1/'\n  }),\n  endpoints: function endpoints(builder) {\n    return {\n      getMountainById: builder.query({\n        query: function query(id) {\n          return {\n            url: \"mountains/\" + id,\n            method: 'GET'\n          };\n        },\n        provides: function provides(result) {\n          return result.mountain;\n        }\n      }),\n      getAllMountains: builder.query({\n        query: function query() {\n          return {\n            url: 'mountains',\n            method: 'GET'\n          };\n        },\n        provides: function provides(result) {\n          return result.mountains;\n        }\n      })\n    };\n  }\n});\nvar useGetMountainByIdQuery = mountainApi.useGetMountainByIdQuery,\n    useGetAllMountainsQuery = mountainApi.useGetAllMountainsQuery;\nexport { useGetMountainByIdQuery, useGetAllMountainsQuery };","map":{"version":3,"sources":["/Users/Hugo.Amorim/Desktop/hikingApp/hikingApp/frontend/common/services/mountain.service.js"],"names":["createApi","fetchBaseQuery","mountainApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getMountainById","query","id","url","method","provides","result","mountain","getAllMountains","mountains","useGetMountainByIdQuery","useGetAllMountainsQuery"],"mappings":"AACA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAGA,OAAO,IAAMC,WAAW,GAAGF,SAAS,CAAC;AACnCG,EAAAA,WAAW,EAAE,aADsB;AAEnCC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFU;AAGnCC,EAAAA,SAAS,EAAE,mBAACC,OAAD;AAAA,WAAc;AACvBC,MAAAA,eAAe,EAAED,OAAO,CAACE,KAAR,CAAc;AAC7BA,QAAAA,KAAK,EAAE,eAACC,EAAD;AAAA,iBAAS;AACdC,YAAAA,GAAG,iBAAeD,EADJ;AAEdE,YAAAA,MAAM,EAAE;AAFM,WAAT;AAAA,SADsB;AAK7BC,QAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,iBAAYA,MAAM,CAACC,QAAnB;AAAA;AALmB,OAAd,CADM;AAQvBC,MAAAA,eAAe,EAAET,OAAO,CAACE,KAAR,CAAc;AAC7BA,QAAAA,KAAK,EAAE;AAAA,iBAAO;AACZE,YAAAA,GAAG,EAAE,WADO;AAEZC,YAAAA,MAAM,EAAE;AAFI,WAAP;AAAA,SADsB;AAK7BC,QAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,iBAAYA,MAAM,CAACG,SAAnB;AAAA;AALmB,OAAd;AARM,KAAd;AAAA;AAHwB,CAAD,CAA7B;AAsBA,IAAQC,uBAAR,GAA6DhB,WAA7D,CAAQgB,uBAAR;AAAA,IAAiCC,uBAAjC,GAA6DjB,WAA7D,CAAiCiB,uBAAjC","sourcesContent":["// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\n// Define a service using a base URL and expected endpoints\nexport const mountainApi = createApi({\n  reducerPath: 'mountainApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:3000/api/v1/' }),\n  endpoints: (builder) => ({  \n    getMountainById: builder.query({\n      query: (id) => ({ \n        url: `mountains/${id}`, \n        method: 'GET'\n      }),\n      provides: (result) => result.mountain,\n    }),\n    getAllMountains: builder.query({\n      query: () => ({\n        url: 'mountains',\n        method: 'GET'\n      }),\n      provides: (result) => result.mountains,\n    }),\n  })\n})     \n\n\nexport const { useGetMountainByIdQuery, useGetAllMountainsQuery } = mountainApi;"]},"metadata":{},"sourceType":"module"}