{"ast":null,"code":"import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\nexport var hikeApi = createApi({\n  reducerPath: 'hikeApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:3000/api/v1/'\n  }),\n  endpoints: function endpoints(builder) {\n    return {\n      getHikes: builder.query({\n        query: function query() {\n          return {\n            url: 'hikes'\n          };\n        },\n        provides: function provides(result) {\n          return result.hikes;\n        }\n      }),\n      getHikeById: builder.query({\n        query: function query(id) {\n          return {\n            url: \"hikes/\" + id\n          };\n        },\n        provides: function provides(result) {\n          return result.hike;\n        }\n      }),\n      addHike: builder.mutation({\n        query: function query(hike) {\n          return {\n            url: '/hikes',\n            method: 'POST',\n            body: hike\n          };\n        }\n      }),\n      updateHike: builder.mutation({\n        mutation: function mutation(values) {\n          return {\n            url: \"hikes/\" + values.id,\n            method: 'PATCH',\n            body: values\n          };\n        },\n        provides: function provides(result) {\n          return result.hike;\n        }\n      }),\n      deleteHike: builder.mutation({\n        mutation: function mutation(values) {\n          return {\n            url: \"hikes/\" + values.id,\n            method: 'DELETE',\n            body: values\n          };\n        },\n        provides: function provides(result) {\n          return result.hike;\n        }\n      })\n    };\n  }\n});\nvar useGetHikesQuery = hikeApi.useGetHikesQuery,\n    useGetHikeByIdQuery = hikeApi.useGetHikeByIdQuery,\n    useAddHikeMutation = hikeApi.useAddHikeMutation,\n    useDeleteHikeMutation = hikeApi.useDeleteHikeMutation,\n    useUpdateHikeMutation = hikeApi.useUpdateHikeMutation;\nexport { useGetHikesQuery, useGetHikeByIdQuery, useAddHikeMutation, useDeleteHikeMutation, useUpdateHikeMutation };","map":{"version":3,"sources":["/Users/Hugo.Amorim/Desktop/hikingApp/hikingApp/frontend/common/services/hike.service.js"],"names":["createApi","fetchBaseQuery","hikeApi","reducerPath","baseQuery","baseUrl","endpoints","builder","getHikes","query","url","provides","result","hikes","getHikeById","id","hike","addHike","mutation","method","body","updateHike","values","deleteHike","useGetHikesQuery","useGetHikeByIdQuery","useAddHikeMutation","useDeleteHikeMutation","useUpdateHikeMutation"],"mappings":"AACA,SAASA,SAAT,EAAoBC,cAApB,QAA0C,8BAA1C;AAGA,OAAO,IAAMC,OAAO,GAAGF,SAAS,CAAC;AAC/BG,EAAAA,WAAW,EAAE,SADkB;AAE/BC,EAAAA,SAAS,EAAEH,cAAc,CAAC;AAAEI,IAAAA,OAAO,EAAE;AAAX,GAAD,CAFM;AAG/BC,EAAAA,SAAS,EAAE,mBAACC,OAAD;AAAA,WAAc;AACvBC,MAAAA,QAAQ,EAAED,OAAO,CAACE,KAAR,CAAc;AACtBA,QAAAA,KAAK,EAAE;AAAA,iBAAO;AAAEC,YAAAA,GAAG,EAAE;AAAP,WAAP;AAAA,SADe;AAEtBC,QAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,iBAAYA,MAAM,CAACC,KAAnB;AAAA;AAFY,OAAd,CADa;AAKvBC,MAAAA,WAAW,EAAEP,OAAO,CAACE,KAAR,CAAc;AACzBA,QAAAA,KAAK,EAAE,eAACM,EAAD;AAAA,iBAAS;AAAEL,YAAAA,GAAG,aAAWK;AAAhB,WAAT;AAAA,SADkB;AAEzBJ,QAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,iBAAYA,MAAM,CAACI,IAAnB;AAAA;AAFe,OAAd,CALU;AASvBC,MAAAA,OAAO,EAAEV,OAAO,CAACW,QAAR,CAAiB;AACxBT,QAAAA,KAAK,EAAE,eAACO,IAAD;AAAA,iBAAW;AAChBN,YAAAA,GAAG,EAAC,QADY;AAEhBS,YAAAA,MAAM,EAAE,MAFQ;AAGhBC,YAAAA,IAAI,EAAEJ;AAHU,WAAX;AAAA;AADiB,OAAjB,CATc;AAgBvBK,MAAAA,UAAU,EAAEd,OAAO,CAACW,QAAR,CAAiB;AAC3BA,QAAAA,QAAQ,EAAE,kBAACI,MAAD;AAAA,iBAAa;AAAEZ,YAAAA,GAAG,aAAWY,MAAM,CAACP,EAAvB;AAA6BI,YAAAA,MAAM,EAAE,OAArC;AAA8CC,YAAAA,IAAI,EAAEE;AAApD,WAAb;AAAA,SADiB;AAE3BX,QAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,iBAAYA,MAAM,CAACI,IAAnB;AAAA;AAFiB,OAAjB,CAhBW;AAoBvBO,MAAAA,UAAU,EAAEhB,OAAO,CAACW,QAAR,CAAiB;AAC3BA,QAAAA,QAAQ,EAAE,kBAACI,MAAD;AAAA,iBAAa;AAAEZ,YAAAA,GAAG,aAAWY,MAAM,CAACP,EAAvB;AAA6BI,YAAAA,MAAM,EAAE,QAArC;AAA+CC,YAAAA,IAAI,EAAEE;AAArD,WAAb;AAAA,SADiB;AAE3BX,QAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,iBAAYA,MAAM,CAACI,IAAnB;AAAA;AAFiB,OAAjB;AApBW,KAAd;AAAA;AAHoB,CAAD,CAAzB;AA+BA,IAAQQ,gBAAR,GAAoHtB,OAApH,CAAQsB,gBAAR;AAAA,IAA0BC,mBAA1B,GAAoHvB,OAApH,CAA0BuB,mBAA1B;AAAA,IAA+CC,kBAA/C,GAAoHxB,OAApH,CAA+CwB,kBAA/C;AAAA,IAAmEC,qBAAnE,GAAoHzB,OAApH,CAAmEyB,qBAAnE;AAAA,IAA0FC,qBAA1F,GAAoH1B,OAApH,CAA0F0B,qBAA1F","sourcesContent":["// Need to use the React-specific entry point to import createApi\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\n\n// Define a service using a base URL and expected endpoints\nexport const hikeApi = createApi({\n  reducerPath: 'hikeApi',\n  baseQuery: fetchBaseQuery({ baseUrl: 'http://localhost:3000/api/v1/' }),\n  endpoints: (builder) => ({\n    getHikes: builder.query({\n      query: () => ({ url: 'hikes' }),\n      provides: (result) => result.hikes,\n    }),\n    getHikeById: builder.query({\n      query: (id) => ({ url: `hikes/${id}` }),\n      provides: (result) => result.hike,\n    }),\n    addHike: builder.mutation({\n      query: (hike) => ({\n        url:'/hikes',\n        method: 'POST',\n        body: hike\n      }) \n    }),\n    updateHike: builder.mutation({\n      mutation: (values) => ({ url: `hikes/${values.id}`, method: 'PATCH', body: values }),\n      provides: (result) => result.hike,\n    }),\n    deleteHike: builder.mutation({\n      mutation: (values) => ({ url: `hikes/${values.id}`, method: 'DELETE', body: values }),\n      provides: (result) => result.hike,\n    }),\n  }),\n})\n\n\nexport const { useGetHikesQuery, useGetHikeByIdQuery, useAddHikeMutation, useDeleteHikeMutation, useUpdateHikeMutation } = hikeApi;\n"]},"metadata":{},"sourceType":"module"}