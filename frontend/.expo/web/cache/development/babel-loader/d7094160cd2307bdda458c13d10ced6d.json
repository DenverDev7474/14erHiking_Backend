{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"name\", \"color\", \"size\", \"selectionColor\", \"onLayout\"],\n    _excluded2 = [\"state\", \"navigation\", \"descriptors\"],\n    _excluded3 = [\"onPress\", \"route\", \"accessibilityRole\", \"borderless\", \"centered\", \"rippleColor\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { SafeAreaProviderCompat } from '@react-navigation/elements';\nimport { CommonActions, Link, useLinkBuilder, useTheme } from '@react-navigation/native';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { BottomNavigation, DarkTheme, DefaultTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nvar MaterialCommunityIcons;\n\ntry {\n  MaterialCommunityIcons = require(\"@expo/vector-icons/MaterialCommunityIcons\").default;\n} catch (e) {\n  var isErrorLogged = false;\n\n  MaterialCommunityIcons = function MaterialCommunityIcons(_ref) {\n    var name = _ref.name,\n        color = _ref.color,\n        size = _ref.size,\n        _0 = _ref.selectionColor,\n        _1 = _ref.onLayout,\n        rest = _objectWithoutProperties(_ref, _excluded);\n\n    if (!isErrorLogged) {\n      if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n        console.error(e);\n      }\n\n      console.warn(\"Tried to use the icon '\" + name + \"' in a component from '@react-navigation/material-bottom-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.\", \"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://reactnavigation.org/docs/material-bottom-tab-navigator/#tabbaricon.\");\n      isErrorLogged = true;\n    }\n\n    return React.createElement(Text, _extends({}, rest, {\n      style: [styles.icon, {\n        color: typeof color !== 'number' ? color : undefined,\n        fontSize: size\n      }]\n    }), \"\\u25A1\");\n  };\n}\n\nfunction MaterialBottomTabViewInner(_ref2) {\n  var state = _ref2.state,\n      navigation = _ref2.navigation,\n      descriptors = _ref2.descriptors,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var insets = useSafeAreaInsets();\n\n  var _useTheme = useTheme(),\n      dark = _useTheme.dark,\n      colors = _useTheme.colors;\n\n  var buildLink = useLinkBuilder();\n  var theme = React.useMemo(function () {\n    var t = dark ? DarkTheme : DefaultTheme;\n    return _objectSpread(_objectSpread({}, t), {}, {\n      colors: _objectSpread(_objectSpread(_objectSpread({}, t.colors), colors), {}, {\n        surface: colors.card\n      })\n    });\n  }, [colors, dark]);\n  return React.createElement(BottomNavigation, _extends({}, rest, {\n    theme: theme,\n    navigationState: state,\n    onIndexChange: function onIndexChange(index) {\n      return navigation.dispatch(_objectSpread(_objectSpread({}, CommonActions.navigate({\n        name: state.routes[index].name,\n        merge: true\n      })), {}, {\n        target: state.key\n      }));\n    },\n    renderScene: function renderScene(_ref3) {\n      var route = _ref3.route;\n      return descriptors[route.key].render();\n    },\n    renderTouchable: Platform.OS === 'web' ? function (_ref4) {\n      var _onPress = _ref4.onPress,\n          route = _ref4.route,\n          _0 = _ref4.accessibilityRole,\n          _1 = _ref4.borderless,\n          _2 = _ref4.centered,\n          _3 = _ref4.rippleColor,\n          style = _ref4.style,\n          rest = _objectWithoutProperties(_ref4, _excluded3);\n\n      return React.createElement(Link, _extends({}, rest, {\n        to: buildLink(route.name, route.params),\n        accessibilityRole: \"link\",\n        onPress: function onPress(e) {\n          if (!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && (e.button == null || e.button === 0)) {\n            e.preventDefault();\n            _onPress === null || _onPress === void 0 ? void 0 : _onPress(e);\n          }\n        },\n        style: [styles.touchable, style]\n      }));\n    } : undefined,\n    renderIcon: function renderIcon(_ref5) {\n      var route = _ref5.route,\n          focused = _ref5.focused,\n          color = _ref5.color;\n      var options = descriptors[route.key].options;\n\n      if (typeof options.tabBarIcon === 'string') {\n        return React.createElement(MaterialCommunityIcons, {\n          name: options.tabBarIcon,\n          color: color,\n          size: 24,\n          style: styles.icon\n        });\n      }\n\n      if (typeof options.tabBarIcon === 'function') {\n        return options.tabBarIcon({\n          focused: focused,\n          color: color\n        });\n      }\n\n      return null;\n    },\n    getLabelText: function getLabelText(_ref6) {\n      var route = _ref6.route;\n      var options = descriptors[route.key].options;\n      return options.tabBarLabel !== undefined ? options.tabBarLabel : options.title !== undefined ? options.title : route.name;\n    },\n    getColor: function getColor(_ref7) {\n      var route = _ref7.route;\n      return descriptors[route.key].options.tabBarColor;\n    },\n    getBadge: function getBadge(_ref8) {\n      var route = _ref8.route;\n      return descriptors[route.key].options.tabBarBadge;\n    },\n    getAccessibilityLabel: function getAccessibilityLabel(_ref9) {\n      var route = _ref9.route;\n      return descriptors[route.key].options.tabBarAccessibilityLabel;\n    },\n    getTestID: function getTestID(_ref10) {\n      var route = _ref10.route;\n      return descriptors[route.key].options.tabBarTestID;\n    },\n    onTabPress: function onTabPress(_ref11) {\n      var route = _ref11.route,\n          preventDefault = _ref11.preventDefault;\n      var event = navigation.emit({\n        type: 'tabPress',\n        target: route.key,\n        canPreventDefault: true\n      });\n\n      if (event.defaultPrevented) {\n        preventDefault();\n      }\n    },\n    safeAreaInsets: insets\n  }));\n}\n\nexport default function MaterialBottomTabView(props) {\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(MaterialBottomTabViewInner, props));\n}\nvar styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  },\n  touchable: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"mappings":"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","names":["SafeAreaProviderCompat","CommonActions","Link","useLinkBuilder","useTheme","React","BottomNavigation","DarkTheme","DefaultTheme","useSafeAreaInsets","MaterialCommunityIcons","require","default","e","isErrorLogged","name","color","size","_0","selectionColor","_1","onLayout","rest","test","message","console","error","warn","Text","style","styles","icon","undefined","fontSize","MaterialBottomTabViewInner","state","navigation","descriptors","insets","dark","colors","buildLink","theme","useMemo","t","surface","card","navigationState","onIndexChange","index","dispatch","navigate","routes","merge","target","key","renderScene","route","render","renderTouchable","Platform","OS","onPress","accessibilityRole","borderless","_2","centered","_3","rippleColor","to","params","metaKey","altKey","ctrlKey","shiftKey","button","preventDefault","touchable","renderIcon","focused","options","tabBarIcon","getLabelText","tabBarLabel","title","getColor","tabBarColor","getBadge","tabBarBadge","getAccessibilityLabel","tabBarAccessibilityLabel","getTestID","tabBarTestID","onTabPress","event","emit","type","canPreventDefault","defaultPrevented","safeAreaInsets","MaterialBottomTabView","props","StyleSheet","create","backgroundColor","display","justifyContent"],"sources":["MaterialBottomTabView.tsx"],"sourcesContent":["import { SafeAreaProviderCompat } from '@react-navigation/elements';\nimport {\n  CommonActions,\n  Link,\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useLinkBuilder,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet, Text } from 'react-native';\nimport { BottomNavigation, DarkTheme, DefaultTheme } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport type {\n  MaterialBottomTabDescriptorMap,\n  MaterialBottomTabNavigationConfig,\n  MaterialBottomTabNavigationHelpers,\n} from '../types';\n\ntype Props = MaterialBottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: MaterialBottomTabNavigationHelpers;\n  descriptors: MaterialBottomTabDescriptorMap;\n};\n\ntype Scene = { route: { key: string } };\n\n// Optionally require vector-icons referenced from react-native-paper:\n// https://github.com/callstack/react-native-paper/blob/4b26429c49053eaa4c3e0fae208639e01093fa87/src/components/MaterialCommunityIcon.tsx#L14\nlet MaterialCommunityIcons: React.ComponentType<\n  React.ComponentProps<\n    typeof import('react-native-vector-icons/MaterialCommunityIcons').default\n  >\n>;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons =\n    require('react-native-vector-icons/MaterialCommunityIcons').default;\n} catch (e: any) {\n  let isErrorLogged = false;\n\n  // Fallback component for icons\n  MaterialCommunityIcons = ({\n    name,\n    color,\n    size,\n    selectionColor: _0,\n    onLayout: _1,\n    ...rest\n  }) => {\n    if (!isErrorLogged) {\n      if (\n        !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n          e.message\n        )\n      ) {\n        console.error(e);\n      }\n\n      console.warn(\n        `Tried to use the icon '${name}' in a component from '@react-navigation/material-bottom-tabs', but 'react-native-vector-icons/MaterialCommunityIcons' could not be loaded.`,\n        `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://reactnavigation.org/docs/material-bottom-tab-navigator/#tabbaricon.`\n      );\n\n      isErrorLogged = true;\n    }\n\n    return (\n      // @ts-expect-error: we're passing icon props to text, but we don't care about it since it's just fallback\n      <Text\n        {...rest}\n        style={[\n          styles.icon,\n          {\n            color: typeof color !== 'number' ? color : undefined,\n            fontSize: size,\n          },\n        ]}\n      >\n        □\n      </Text>\n    );\n  };\n}\n\nfunction MaterialBottomTabViewInner({\n  state,\n  navigation,\n  descriptors,\n  ...rest\n}: Props) {\n  const insets = useSafeAreaInsets();\n  const { dark, colors } = useTheme();\n  const buildLink = useLinkBuilder();\n\n  const theme = React.useMemo(() => {\n    const t = dark ? DarkTheme : DefaultTheme;\n\n    return {\n      ...t,\n      colors: {\n        ...t.colors,\n        ...colors,\n        surface: colors.card,\n      },\n    };\n  }, [colors, dark]);\n\n  return (\n    <BottomNavigation\n      {...rest}\n      theme={theme}\n      navigationState={state}\n      onIndexChange={(index: number) =>\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: state.routes[index].name,\n            merge: true,\n          }),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      renderTouchable={\n        Platform.OS === 'web'\n          ? ({\n              onPress,\n              route,\n              accessibilityRole: _0,\n              borderless: _1,\n              centered: _2,\n              rippleColor: _3,\n              style,\n              ...rest\n            }) => {\n              return (\n                <Link\n                  {...rest}\n                  // @ts-expect-error: to could be undefined, but it doesn't affect functionality\n                  to={buildLink(route.name, route.params)}\n                  accessibilityRole=\"link\"\n                  onPress={(e: any) => {\n                    if (\n                      !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) && // ignore clicks with modifier keys\n                      (e.button == null || e.button === 0) // ignore everything but left clicks\n                    ) {\n                      e.preventDefault();\n                      onPress?.(e);\n                    }\n                  }}\n                  style={[styles.touchable, style]}\n                />\n              );\n            }\n          : undefined\n      }\n      renderIcon={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (typeof options.tabBarIcon === 'string') {\n          return (\n            <MaterialCommunityIcons\n              name={options.tabBarIcon}\n              color={color}\n              size={24}\n              style={styles.icon}\n            />\n          );\n        }\n\n        if (typeof options.tabBarIcon === 'function') {\n          return options.tabBarIcon({ focused, color });\n        }\n\n        return null;\n      }}\n      getLabelText={({ route }: Scene) => {\n        const { options } = descriptors[route.key];\n\n        return options.tabBarLabel !== undefined\n          ? options.tabBarLabel\n          : options.title !== undefined\n          ? options.title\n          : (route as Route<string>).name;\n      }}\n      getColor={({ route }) => descriptors[route.key].options.tabBarColor}\n      getBadge={({ route }) => descriptors[route.key].options.tabBarBadge}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n      safeAreaInsets={insets}\n    />\n  );\n}\n\nexport default function MaterialBottomTabView(props: Props) {\n  return (\n    <SafeAreaProviderCompat>\n      <MaterialBottomTabViewInner {...props} />\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n  touchable: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}