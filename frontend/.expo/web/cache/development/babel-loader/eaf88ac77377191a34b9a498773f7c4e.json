{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Colors from \"../../constants/colors\";\nimport HikeListTile from \"../../components/HikeListTile\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from \"../../components/HeaderButton\";\nimport HikeHeader from \"../../components/HikeHeader\";\nimport Avatar from \"../../components/Avatar\";\nimport { useAppSelector } from \"../../common/hooks/hooks\";\nimport moment from 'moment';\nimport ActionCard from \"../../components/ActionCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CalendarDetailScreen = function CalendarDetailScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var hikeId = route.params.hikeId;\n  var availableHikes = useAppSelector(function (state) {\n    return state.hikeState.hikesAvailable;\n  });\n  var mountains = useAppSelector(function (state) {\n    return state.mountainState.mountains;\n  });\n  var routes = useAppSelector(function (state) {\n    return state.routeState.routes;\n  });\n  var users = useAppSelector(function (state) {\n    return state.userState.users;\n  });\n  var selectedHike = availableHikes.find(function (hike) {\n    return hike.id === hikeId;\n  });\n  var selectedHikeMountain = mountains.find(function (mountain) {\n    return mountain.mountainId === selectedHike.mountainId;\n  });\n  var selectedRoute = routes.find(function (route) {\n    return route.routeId === selectedHike.routeId;\n  });\n  var dateTime = new Date(selectedHike.dateTime);\n  var date = moment(dateTime).format(\"MMM Do YYYY\");\n  var time = moment(dateTime).format('LT');\n  var allUsers = [];\n  var attendees = selectedHike.attendeesIds;\n  attendees.map(function (item) {\n    return users.map(function (user) {\n      if (user.id === item) {\n        return allUsers.push(user);\n      }\n    });\n  });\n  var host = users.find(function (user) {\n    return user.id === selectedHike.hostId;\n  });\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(ScrollView, {\n      children: _jsxs(View, {\n        style: styles.screen,\n        children: [_jsx(HikeHeader, {\n          selectedMountain: selectedHikeMountain\n        }), _jsxs(View, {\n          style: styles.infoContainer,\n          children: [_jsxs(View, {\n            style: styles.specContainer,\n            children: [_jsx(Text, {\n              style: styles.mtnDetailsText,\n              children: date\n            }), _jsx(Text, {\n              style: styles.mtnDetailsText,\n              children: time\n            }), _jsxs(Text, {\n              style: styles.mtnDetailsText,\n              children: [\"Difficulty Class: \", selectedRoute.difficulty]\n            }), _jsxs(Text, {\n              style: styles.mtnDetailsText,\n              children: [\"Mileage: \", selectedRoute.distance]\n            }), _jsxs(Text, {\n              style: styles.mtnDetailsText,\n              children: [\"Elevation: \", selectedRoute.gain]\n            })]\n          }), _jsxs(View, {\n            style: styles.specContainer,\n            children: [_jsx(Pressable, {\n              style: styles.mtnDetails,\n              children: _jsx(Text, {\n                style: styles.mtnDetailsTextButton,\n                children: \"Cancel Hike\"\n              })\n            }), _jsx(Pressable, {\n              style: styles.mtnDetails,\n              children: _jsx(Text, {\n                style: styles.mtnDetailsTextButton,\n                children: \"Group Chat\"\n              })\n            })]\n          })]\n        }), _jsxs(View, {\n          style: styles.AttendeeContainer,\n          children: [_jsx(View, {\n            style: styles.HeaderContainer,\n            children: _jsx(Text, {\n              style: styles.AttendeeHeader,\n              children: \"Group:\"\n            })\n          }), _jsxs(View, {\n            style: styles.ProfilesContainer,\n            children: [_jsxs(View, {\n              style: styles.usersContainer,\n              children: [_jsx(Avatar, {\n                imageUrl: host.profilePicUrl,\n                size: 45\n              }), _jsxs(View, {\n                style: {\n                  flexDirection: 'column',\n                  paddingLeft: 10\n                },\n                children: [_jsx(Text, {\n                  styles: styles.hostusersText,\n                  children: \"Lead/Organizer\"\n                }), _jsx(Text, {\n                  style: styles.hostTextName,\n                  children: host.firstName\n                })]\n              })]\n            }, host.id), allUsers.map(function (user) {\n              return _jsxs(View, {\n                style: styles.usersContainer,\n                children: [_jsx(Avatar, {\n                  imageUrl: user.profilePicUrl,\n                  size: 45\n                }), _jsx(Text, {\n                  style: styles.usersText,\n                  children: user.firstName\n                })]\n              }, user.id);\n            })]\n          })]\n        })]\n      })\n    }), _jsx(ActionCard, {\n      actionName: 'Start Hike'\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: StatusBar.currentHeight\n  },\n  Screen: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  mtnDetails: {\n    backgroundColor: Colors.secondaryBlue,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 12,\n    borderRadius: 5,\n    elevation: 3,\n    width: 160,\n    height: 30,\n    marginTop: 8\n  },\n  mtnDetailsTextButton: {\n    textTransform: 'uppercase',\n    color: 'white',\n    fontSize: 15,\n    fontFamily: 'openSans',\n    color: 'white',\n    position: 'absolute'\n  },\n  mtnDetailsText: {\n    color: Colors.secondaryBlue,\n    fontSize: 20,\n    fontFamily: 'openSans',\n    lineHeight: 30\n  },\n  infoContainer: {\n    flexDirection: 'row'\n  },\n  specContainer: {\n    padding: 17\n  },\n  circleText: {\n    color: 'white',\n    fontFamily: 'openSansBold',\n    fontSize: 21,\n    textAlign: 'center'\n  },\n  circleNumber: {\n    backgroundColor: '#0068B0',\n    color: 'white',\n    height: 45,\n    width: 45,\n    borderRadius: 45 / 2,\n    overflow: 'hidden',\n    fontFamily: 'openSansBold',\n    fontSize: 21,\n    flex: 1,\n    justifyContent: 'center'\n  },\n  ProfilesContainer: {\n    height: 135,\n    flexDirection: 'column',\n    alignItems: 'flex-start'\n  },\n  AttendeeContainer: {\n    marginHorizontal: 17,\n    marginTop: 20,\n    height: 135\n  },\n  AttendeeHeader: {\n    fontSize: 20,\n    fontFamily: 'robotoSlab',\n    color: '#072649'\n  },\n  usersContainer: {\n    flexDirection: 'row',\n    marginVertical: 5,\n    alignItems: 'center',\n    width: '50%'\n  },\n  usersText: {\n    fontSize: 18,\n    fontFamily: 'openSans',\n    color: '#0068B0',\n    marginLeft: 10\n  },\n  hostTextName: {\n    fontSize: 18,\n    fontFamily: 'openSans',\n    color: '#0068B0'\n  },\n  usersTextSmall: {\n    fontSize: 10,\n    fontFamily: 'openSans',\n    color: '#0068B0',\n    marginLeft: 10\n  },\n  HeaderContainer: {\n    width: '100%'\n  },\n  AttendeeText: {\n    fontSize: 18,\n    fontFamily: 'openSans',\n    lineHeight: 23,\n    color: '#0068B0'\n  },\n  hostusersText: {\n    fontSize: 8,\n    fontFamily: 'openSans',\n    color: '#072649'\n  }\n});\nexport default CalendarDetailScreen;","map":{"version":3,"sources":["/Users/Hugo.Amorim/Desktop/hikingApp/hikingApp/frontend/screens/Calendar/CalendarDetailScreen.js"],"names":["React","Colors","HikeListTile","HeaderButtons","Item","HeaderButton","HikeHeader","Avatar","useAppSelector","moment","ActionCard","CalendarDetailScreen","route","navigation","hikeId","params","availableHikes","state","hikeState","hikesAvailable","mountains","mountainState","routes","routeState","users","userState","selectedHike","find","hike","id","selectedHikeMountain","mountain","mountainId","selectedRoute","routeId","dateTime","Date","date","format","time","allUsers","attendees","attendeesIds","map","item","user","push","host","hostId","styles","container","screen","infoContainer","specContainer","mtnDetailsText","difficulty","distance","gain","mtnDetails","mtnDetailsTextButton","AttendeeContainer","HeaderContainer","AttendeeHeader","ProfilesContainer","usersContainer","profilePicUrl","flexDirection","paddingLeft","hostusersText","hostTextName","firstName","usersText","StyleSheet","create","flex","paddingTop","StatusBar","currentHeight","Screen","justifyContent","alignItems","backgroundColor","secondaryBlue","paddingVertical","borderRadius","elevation","width","height","marginTop","textTransform","color","fontSize","fontFamily","position","lineHeight","padding","circleText","textAlign","circleNumber","overflow","marginHorizontal","marginVertical","marginLeft","usersTextSmall","AttendeeText"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, Button, FlatList, StatusBar, ScrollView, SafeAreaView, Pressable, TouchableOpacity } from 'react-native'\n    \n// import { HIKES, MOUNTAINS } from '../../data/dummy-data'\n// import Hike from '../../models/hike';\nimport Colors from \"../../constants/colors\"\nimport HikeListTile from '../../components/HikeListTile';\n    \nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport HeaderButton from '../../components/HeaderButton'\nimport HikeHeader from '../../components/HikeHeader';\nimport Avatar from '../../components/Avatar'\nimport { useAppSelector } from '../../common/hooks/hooks';\nimport moment from 'moment';\nimport ActionCard from '../../components/ActionCard';\n\n\n    \nconst CalendarDetailScreen = ({route, navigation}) => {\n    \n    const hikeId = route.params.hikeId;\n\n    const availableHikes = useAppSelector((state) => state.hikeState.hikesAvailable)\n    const mountains = useAppSelector((state) => state.mountainState.mountains)\n    const routes = useAppSelector((state) => state.routeState.routes)\n    const users = useAppSelector(state => state.userState.users);\n\n\n    const selectedHike = availableHikes.find(hike => hike.id === hikeId);\n    const selectedHikeMountain = mountains.find(mountain => mountain.mountainId === selectedHike.mountainId);\n    const selectedRoute = routes.find(route => route.routeId === selectedHike.routeId);\n\n    var dateTime = new Date(selectedHike.dateTime);\n    const date = moment(dateTime).format(\"MMM Do YYYY\");\n    const time = moment(dateTime).format('LT');\n\n    const allUsers = [];\n    const attendees = selectedHike.attendeesIds;\n\n    attendees.map( item => users.map( user => {\n        if (user.id === item) {\n            return allUsers.push(user);\n        }\n    }))\n\n    const host = users.find(user => user.id === selectedHike.hostId) \n\n        return (\n            <SafeAreaView style={styles.container}>\n             <ScrollView>\n                <View style={styles.screen}>\n                    <HikeHeader selectedMountain={selectedHikeMountain}/>\n                    <View style={styles.infoContainer}>\n                        <View style={styles.specContainer}>\n                            <Text style={styles.mtnDetailsText}>{date}</Text>\n                            <Text style={styles.mtnDetailsText}>{time}</Text>\n                            <Text style={styles.mtnDetailsText}>Difficulty Class: {selectedRoute.difficulty}</Text>\n                            <Text style={styles.mtnDetailsText}>Mileage: {selectedRoute.distance}</Text>\n                            <Text style={styles.mtnDetailsText}>Elevation: {selectedRoute.gain}</Text>\n                        </View>\n                        <View style={styles.specContainer}>\n                            <Pressable style={styles.mtnDetails} >\n                                <Text style={styles.mtnDetailsTextButton}>Cancel Hike</Text>\n                            </Pressable>\n                            <Pressable style={styles.mtnDetails} >\n                                <Text style={styles.mtnDetailsTextButton}>Group Chat</Text>\n                            </Pressable>\n                        </View>\n                    </View>\n                    <View style={styles.AttendeeContainer}>\n                        <View style={styles.HeaderContainer}>\n                            <Text style={styles.AttendeeHeader}>Group:</Text>\n                        </View>\n                        <View style={styles.ProfilesContainer}>\n                                 <View key={host.id} style={styles.usersContainer}>\n                                     <Avatar imageUrl={host.profilePicUrl} size={45} />\n                                     <View style={{flexDirection: 'column', paddingLeft: 10}}>\n                                        <Text styles={styles.hostusersText}>Lead/Organizer</Text>\n                                        <Text style={styles.hostTextName}>{host.firstName}</Text>\n                                     </View>\n                                \n                                </View>\n                        { allUsers.map((user) => {\n                            return (\n                                <View key={user.id} style={styles.usersContainer}>\n                                     <Avatar imageUrl={user.profilePicUrl} size={45} />\n                                    <Text style={styles.usersText}>{user.firstName}</Text>\n                                </View>\n                            )\n                        })}\n                        </View>\n                    </View>\n                </View>\n            </ScrollView>\n            <ActionCard actionName={'Start Hike'}/>\n        </SafeAreaView>\n        );\n    };\n    \n    const styles = StyleSheet.create({\n        container: {\n            flex: 1,\n            paddingTop: StatusBar.currentHeight,\n        },\n        Screen: {\n            flex: 1, \n            justifyContent: 'center',\n            alignItems: 'center',\n        },\n        mtnDetails: {\n            backgroundColor: Colors.secondaryBlue,\n            alignItems: 'center',\n            justifyContent: 'center',\n            paddingVertical: 12,\n            borderRadius: 5,\n            elevation: 3,\n            width: 160,\n            height: 30,\n            marginTop: 8\n    \n        },\n        mtnDetailsTextButton: {\n            textTransform: 'uppercase', \n            color: 'white',\n            fontSize: 15,\n            fontFamily: 'openSans',\n            color: 'white',\n            position: 'absolute',\n        },\n        mtnDetailsText: {\n            color: Colors.secondaryBlue,\n            fontSize: 20,\n            fontFamily: 'openSans',\n            lineHeight: 30\n        },\n        infoContainer: {\n            flexDirection: 'row',\n        },\n        specContainer : {\n            padding: 17\n        },\n        circleText: {\n            color: 'white',\n            fontFamily: 'openSansBold',\n            fontSize: 21,\n            textAlign: 'center'\n        },\n        circleNumber: {\n            backgroundColor: '#0068B0',\n            color: 'white',\n            height: 45,\n            width: 45,\n            borderRadius: 45/2,\n            overflow: 'hidden',\n            fontFamily: 'openSansBold',\n            fontSize: 21,\n            flex: 1,\n            justifyContent: 'center',\n        },\n        ProfilesContainer :{\n            height: 135,\n            flexDirection: 'column',\n            alignItems: 'flex-start'\n        },\n        AttendeeContainer: {\n            marginHorizontal: 17,\n            marginTop: 20,\n            height: 135,\n        },\n        AttendeeHeader: {\n            fontSize: 20,\n            fontFamily: 'robotoSlab',\n            color: '#072649',\n        },\n        usersContainer: {\n            flexDirection: 'row',\n            marginVertical: 5,\n            alignItems:'center',\n            width: '50%'\n        },\n        usersText: {\n            fontSize: 18,\n            fontFamily: 'openSans',\n            color: '#0068B0',\n            marginLeft: 10\n        },\n        hostTextName: {\n            fontSize: 18,\n            fontFamily: 'openSans',\n            color: '#0068B0',\n        },\n        usersTextSmall: {\n            fontSize: 10,\n            fontFamily: 'openSans',\n            color: '#0068B0',\n            marginLeft: 10\n    \n        },\n        HeaderContainer : {\n            width: '100%'\n        },\n        AttendeeText: {\n            fontSize: 18,\n            fontFamily: 'openSans',\n            lineHeight: 23,\n            color: '#0068B0',        \n        },\n        hostusersText: {\n            fontSize:8,\n            fontFamily: 'openSans',\n            color: '#072649',\n        }\n    });\n\nexport default  CalendarDetailScreen;\n"]},"metadata":{},"sourceType":"module"}